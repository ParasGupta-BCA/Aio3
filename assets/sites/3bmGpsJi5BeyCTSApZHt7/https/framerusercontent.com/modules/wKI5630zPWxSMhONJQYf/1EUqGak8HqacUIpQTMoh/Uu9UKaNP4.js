// Generated by Framer (629c622)
import {
    jsx as _jsx,
    jsxs as _jsxs
} from "react/jsx-runtime";
import {
    addFonts,
    addPropertyControls,
    ControlType,
    cx,
    getFontsFromSharedStyle,
    Link,
    RichText,
    useComponentViewport,
    useLocaleInfo,
    useVariantState,
    withCSS
} from "framer";
import {
    LayoutGroup,
    motion,
    MotionConfigContext
} from "framer-motion";
import * as React from "react";
import {
    useRef
} from "react";
import * as sharedStyle from "https://framerusercontent.com/modules/vvTRd3aXmO5nzdZEH0rI/PRLlecgbwRo9CEQNp2RI/EBQDvGnCv.js";
import * as sharedStyle1 from "https://framerusercontent.com/modules/3KRgbOO5QNQnf7OW3HjV/hSx2y3TWuWnUSPqvJgoH/UezruUh9E.js";
import * as sharedStyle2 from "https://framerusercontent.com/modules/WyPbwSLLHUkU23c7gM0b/LLyoeuR4asr834YpogTw/ZRloE2uUu.js";
const cycleOrder = ["cjkDSP2qE", "yAincoNeC"];
const serializationHash = "framer-wttbM";
const variantClassNames = {
    cjkDSP2qE: "framer-v-1jgmiek",
    yAincoNeC: "framer-v-19x0wet"
};

function addPropertyOverrides(overrides, ...variants) {
    const nextOverrides = {};
    variants ? .forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]));
    return nextOverrides;
}
const transition1 = {
    bounce: .2,
    delay: 0,
    duration: .4,
    type: "spring"
};
const Transition = ({
    value,
    children
}) => {
    const config = React.useContext(MotionConfigContext);
    const transition = value ? ? config.transition;
    const contextValue = React.useMemo(() => ({ ...config,
        transition
    }), [JSON.stringify(transition)]);
    return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
        value: contextValue,
        children: children
    });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = {
    "Desktop & Tablet": "cjkDSP2qE",
    Phone: "yAincoNeC"
};
const getProps = ({
    height,
    id,
    width,
    ...props
}) => {
    return { ...props,
        variant: humanReadableVariantMap[props.variant] ? ? props.variant ? ? "cjkDSP2qE"
    };
};
const createLayoutDependency = (props, variants) => {
    if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
    return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const fallbackRef = useRef(null);
    const refBinding = ref ? ? fallbackRef;
    const defaultLayoutId = React.useId();
    const {
        activeLocale,
        setLocale
    } = useLocaleInfo();
    const componentViewport = useComponentViewport();
    const {
        style,
        className,
        layoutId,
        variant,
        ...restProps
    } = getProps(props);
    const {
        baseVariant,
        classNames,
        clearLoadingGesture,
        gestureHandlers,
        gestureVariant,
        isLoading,
        setGestureState,
        setVariant,
        variants
    } = useVariantState({
        cycleOrder,
        defaultVariant: "cjkDSP2qE",
        ref: refBinding,
        variant,
        variantClassNames
    });
    const layoutDependency = createLayoutDependency(props, variants);
    const sharedStyleClassNames = [sharedStyle.className, sharedStyle1.className, sharedStyle2.className];
    const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
    return /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId ? ? defaultLayoutId,
        children: /*#__PURE__*/ _jsx(Variants, {
            animate: variants,
            initial: false,
            children: /*#__PURE__*/ _jsx(Transition, {
                value: transition1,
                children: /*#__PURE__*/ _jsx(motion.div, { ...restProps,
                    ...gestureHandlers,
                    className: cx(scopingClassNames, "framer-1jgmiek", className, classNames),
                    "data-framer-name": "Desktop & Tablet",
                    layoutDependency: layoutDependency,
                    layoutId: "cjkDSP2qE",
                    ref: refBinding,
                    style: { ...style
                    },
                    ...addPropertyOverrides({
                        yAincoNeC: {
                            "data-framer-name": "Phone"
                        }
                    }, baseVariant, gestureVariant),
                    children: /*#__PURE__*/ _jsxs(motion.div, {
                        className: "framer-zw9vyd",
                        "data-framer-name": "Text Wrap",
                        layoutDependency: layoutDependency,
                        layoutId: "QrapRS_M2",
                        children: [ /*#__PURE__*/ _jsx(RichText, {
                            __fromCanvasComponent: true,
                            children: /*#__PURE__*/ _jsx(React.Fragment, {
                                children: /*#__PURE__*/ _jsx(motion.p, {
                                    className: "framer-styles-preset-6nl8p7",
                                    "data-styles-preset": "EBQDvGnCv",
                                    style: {
                                        "--framer-text-color": "var(--extracted-r6o4lv, var(--token-a9f688eb-778b-4a71-929e-ebf8a014b4cf, rgb(48, 48, 48)))"
                                    },
                                    children: "Email :"
                                })
                            }),
                            className: "framer-1ayqvr4",
                            fonts: ["Inter"],
                            layoutDependency: layoutDependency,
                            layoutId: "iuoq51p1u",
                            style: {
                                "--extracted-r6o4lv": "var(--token-a9f688eb-778b-4a71-929e-ebf8a014b4cf, rgb(48, 48, 48))",
                                "--framer-link-text-color": "rgb(0, 153, 255)",
                                "--framer-link-text-decoration": "underline"
                            },
                            verticalAlignment: "top",
                            withExternalLayout: true
                        }), /*#__PURE__*/ _jsx(RichText, {
                            __fromCanvasComponent: true,
                            children: /*#__PURE__*/ _jsx(React.Fragment, {
                                children: /*#__PURE__*/ _jsx(motion.p, {
                                    className: "framer-styles-preset-17cdd8a",
                                    "data-styles-preset": "UezruUh9E",
                                    style: {
                                        "--framer-text-color": "var(--extracted-r6o4lv, var(--token-7d1fd828-621c-47fc-b270-6f2c2fff9ca2, rgb(143, 143, 143)))"
                                    },
                                    children: /*#__PURE__*/ _jsx(Link, {
                                        href: "mailto:designer@example.com",
                                        motionChild: true,
                                        nodeId: "skJVLy6cr",
                                        openInNewTab: true,
                                        relValues: [],
                                        scopeId: "Uu9UKaNP4",
                                        smoothScroll: false,
                                        children: /*#__PURE__*/ _jsx(motion.a, {
                                            className: "framer-styles-preset-1tmbphv",
                                            "data-styles-preset": "ZRloE2uUu",
                                            children: "designer@example.com"
                                        })
                                    })
                                })
                            }),
                            className: "framer-1b4b9bc",
                            fonts: ["Inter"],
                            layoutDependency: layoutDependency,
                            layoutId: "skJVLy6cr",
                            style: {
                                "--extracted-r6o4lv": "var(--token-7d1fd828-621c-47fc-b270-6f2c2fff9ca2, rgb(143, 143, 143))"
                            },
                            verticalAlignment: "top",
                            withExternalLayout: true
                        })]
                    })
                })
            })
        })
    });
});
const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-wttbM.framer-1r97v75, .framer-wttbM .framer-1r97v75 { display: block; }", ".framer-wttbM.framer-1jgmiek { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }", ".framer-wttbM .framer-zw9vyd { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }", ".framer-wttbM .framer-1ayqvr4, .framer-wttbM .framer-1b4b9bc { flex: none; height: auto; position: relative; white-space: pre; width: auto; z-index: 1; }", ".framer-wttbM.framer-v-19x0wet.framer-1jgmiek { align-content: center; align-items: center; justify-content: flex-start; }", ".framer-wttbM.framer-v-19x0wet .framer-zw9vyd { align-content: center; align-items: center; flex-direction: row; gap: 5px; }", ...sharedStyle.css, ...sharedStyle1.css, ...sharedStyle2.css];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 50
 * @framerIntrinsicWidth 203
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"yAincoNeC":{"layout":["auto","auto"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const FramerUu9UKaNP4 = withCSS(Component, css, "framer-wttbM");
export default FramerUu9UKaNP4;
FramerUu9UKaNP4.displayName = "Email Info Card";
FramerUu9UKaNP4.defaultProps = {
    height: 50,
    width: 203
};
addPropertyControls(FramerUu9UKaNP4, {
    variant: {
        options: ["cjkDSP2qE", "yAincoNeC"],
        optionTitles: ["Desktop & Tablet", "Phone"],
        title: "Variant",
        type: ControlType.Enum
    }
});
addFonts(FramerUu9UKaNP4, [{
    explicitInter: true,
    fonts: [{
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
        url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
        url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+1F00-1FFF",
        url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0370-03FF",
        url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
        url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
        url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
        url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
        weight: "400"
    }]
}, ...getFontsFromSharedStyle(sharedStyle.fonts), ...getFontsFromSharedStyle(sharedStyle1.fonts), ...getFontsFromSharedStyle(sharedStyle2.fonts)], {
    supportsExplicitInterCodegen: true
});
export const __FramerMetadata__ = {
    "exports": {
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "default": {
            "type": "reactComponent",
            "name": "FramerUu9UKaNP4",
            "slots": [],
            "annotations": {
                "framerComponentViewportWidth": "true",
                "framerIntrinsicHeight": "50",
                "framerImmutableVariables": "true",
                "framerCanvasComponentVariantDetails": "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"auto\",\"auto\"]},\"yAincoNeC\":{\"layout\":[\"auto\",\"auto\"]}}}",
                "framerIntrinsicWidth": "203",
                "framerColorSyntax": "true",
                "framerAutoSizeImages": "true",
                "framerDisplayContentsDiv": "false",
                "framerContractVersion": "1"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}